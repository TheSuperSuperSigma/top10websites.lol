rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Basic user profile access
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
      
      match /friends/{friendId} {
        allow read, write: if isAuthenticated() && 
          (request.auth.uid == userId || request.auth.uid == friendId);
      }
    }
    
    // Friend requests collection
    match /friendRequests/{requestId} {
      allow read: if isAuthenticated() && (
        resource.data.to == request.auth.uid || 
        resource.data.from == request.auth.uid
      );
      allow create: if isAuthenticated() && 
        request.resource.data.from == request.auth.uid;
      allow delete: if isAuthenticated() && (
        resource.data.to == request.auth.uid || 
        resource.data.from == request.auth.uid
      );
    }

    // Messages collection
    match /messages/{messageId} {
      allow read, write: if isAuthenticated();
    }

    // Direct Messages
    match /directMessages/{messageId} {
      // Allow reading messages where the user is either the sender or receiver
      allow read: if isAuthenticated() && (
        resource.data.fromUserId == request.auth.uid ||
        resource.data.toUserId == request.auth.uid ||
        resource.data.chatId.matches(request.auth.uid + '.*') ||
        resource.data.chatId.matches('.*' + request.auth.uid)
      );
      
      // Allow creating messages only if the user is the sender
      allow create: if isAuthenticated() && 
        request.resource.data.fromUserId == request.auth.uid &&
        request.resource.data.chatId.matches('.*' + request.auth.uid + '.*');
        
      // Optional: Allow deleting messages if you're the sender
      allow delete: if isAuthenticated() &&
        resource.data.fromUserId == request.auth.uid;
    }
  }
}







